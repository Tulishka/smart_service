services:

  web:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/letsencrypt
      - ./app/static:/static
      - ./app/media:/media
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    ports:
      - "80:80"
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - /var/www/html:/var/www/html
    command: certonly --standalone -d smart-dep.ru -d www.smart-dep.ru --email smartservice@mail.ru --agree-tos --non-interactive

  postgres:
    image: postgres:15-alpine
    shm_size: 128mb
    environment:
      POSTGRES_USER: ss
      POSTGRES_DB: smart_service
      POSTGRES_PASSWORD: postgres_password
    ports:
      - "5432:5432"
    volumes:
      - ./app/data/postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 4s
      retries: 5
